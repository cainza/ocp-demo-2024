apiVersion: loki.grafana.com/v1
kind: LokiStack
metadata:
  name: lokistack-demo
  namespace: openshift-logging
spec:
  hashRing:
    type: memberlist
  limits:
    global:
      queries:
        queryTimeout: 3m
  managementState: Managed
  size: 1x.small
  storage:
    schemas:
      - effectiveDate: '2020-10-11'
        version: v11
    secret:
      name: logging-loki-odf
      type: s3
  storageClassName: openshift-sc-poc-01
  tenants:
    mode: openshift-logging


# Loki secret has to be created manually from another secret
# Go to command line with oc client enabled.
#
# Get the bucket information 
BUCKET_HOST=$(oc get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_HOST}')
BUCKET_NAME=$(oc get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_NAME}')
BUCKET_PORT=$(oc get -n openshift-logging configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_PORT}')

# Get the Bucket access key
ACCESS_KEY_ID=$(oc get -n openshift-logging secret loki-bucket-odf -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)
SECRET_ACCESS_KEY=$(oc get -n openshift-logging secret loki-bucket-odf -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)

# create the secret from the variable created above
oc create secret generic logging-loki-odf -n openshift-logging \
   --from-literal=access_key_id=${ACCESS_KEY_ID} \
   --from-literal=access_key_secret=${SECRET_ACCESS_KEY} \
   --from-literal=bucketnames=${BUCKET_NAME} \
   --from-literal=endpoint=https://${BUCKET_HOST}:${BUCKET_PORT}
